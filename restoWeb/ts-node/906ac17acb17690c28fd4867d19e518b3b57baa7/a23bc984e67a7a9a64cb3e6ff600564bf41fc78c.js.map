{"version":3,"file":"/Users/Samer/Desktop/RestoTouch/restoWeb/tools/config/project.config.ts","sources":["/Users/Samer/Desktop/RestoTouch/restoWeb/tools/config/project.config.ts"],"names":[],"mappings":";;;;;;AAAA,qBAAqB,MAAM,CAAC,CAAA;AAE5B,4BAA2B,eAAe,CAAC,CAAA;AAS3C;IAAmC,iCAAU;IAI3C;QACE,iBAAO,CAAC;QAHV,sBAAiB,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAIzE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAM3B,IAAI,CAAC,gBAAgB,GAChB,IAAI,CAAC,gBAAgB;YACxB,EAAE,GAAG,EAAE,mCAAmC,EAAE,MAAM,EAAE,IAAI,EAAE;UAG3D,CAAC;QAEF,IAAI,CAAC,UAAU,GAAM,IAAI,CAAC,QAAQ,WAAQ,CAAC;QAI3C,IAAI,CAAC,UAAU,GACV,IAAI,CAAC,UAAU,QAInB,CAAC;QAEF,IAAI,kBAAkB,GAAqB;YAEzC;gBACE,IAAI,EAAC,eAAe;gBACpB,IAAI,EAAC,6DAA6D;aACnE;YAGD;gBACE,IAAI,EAAC,iBAAiB;gBACtB,IAAI,EAAC,6DAA6D;aACnE;YAGD;gBACE,IAAI,EAAC,QAAQ;gBACb,IAAI,EAAC,qBAAqB;gBAC1B,WAAW,EAAC;oBACV,IAAI,EAAE,WAAW;oBACjB,gBAAgB,EAAE,IAAI;iBACvB;aACF;SACF,CAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;IAC9C,CAAC;IAEH,oBAAC;AAAD,CAAC,AA1DD,CAAmC,wBAAU,GA0D5C;AA1DY,qBAAa,gBA0DzB,CAAA","sourcesContent":["import { join } from 'path';\n\nimport { SeedConfig } from './seed.config';\nimport { ExtendPackages } from './seed.config.interfaces';\n\n/**\n * This class extends the basic seed configuration, allowing for project specific overrides. A few examples can be found\n * below.\n */\n\n\nexport class ProjectConfig extends SeedConfig {\n\n  PROJECT_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'project');\n\n  constructor() {\n    super();\n     this.APP_TITLE = 'RestoTouch';\n\n     this.ENABLE_SCSS = 'true';\n\n    /* Enable typeless compiler runs (faster) between typed compiler runs. */\n    // this.TYPED_COMPILE_INTERVAL = 5;\n\n    // Add `NPM` third-party libraries to be injected/bundled.\n    this.NPM_DEPENDENCIES = [\n      ...this.NPM_DEPENDENCIES,\n      { src: 'font-awesome/css/font-awesome.css', inject: true }\n      // {src: 'jquery/dist/jquery.min.js', inject: 'libs'},\n      // {src: 'lodash/lodash.min.js', inject: 'libs'},\n    ];\n\n    this.FONTS_DEST = `${this.APP_DEST}/fonts`;\n\n\n    // Add `local` third-party libraries to be injected/bundled.\n    this.APP_ASSETS = [\n      ...this.APP_ASSETS,\n      //{src: `${this.ASSETS_SRC}/sass/app.css`, inject: true, vendor: false}\n      // {src: `${this.APP_SRC}/your-path-to-lib/libs/jquery-ui.js`, inject: true, vendor: false}\n      // {src: `${this.CSS_SRC}/path-to-lib/test-lib.css`, inject: true, vendor: false},\n    ];\n\n    let additionalPackages: ExtendPackages[] = [\n      // required for dev build\n      {\n        name:'ng2-bootstrap',\n        path:'node_modules/ng2-bootstrap/bundles/ng2-bootstrap.umd.min.js'\n      },\n\n      // required for prod build\n      {\n        name:'ng2-bootstrap/*',\n        path:'node_modules/ng2-bootstrap/bundles/ng2-bootstrap.umd.min.js'\n      },\n\n      // mandatory dependency for ng2-bootstrap datepicker\n      {\n        name:'moment',\n        path:'node_modules/moment',\n        packageMeta:{\n          main: 'moment.js',\n          defaultExtension: 'js'\n        }\n      }\n    ];\n    this.addPackagesBundles(additionalPackages);\n  }\n\n}\n"]}